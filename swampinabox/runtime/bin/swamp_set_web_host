#!/bin/bash

# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2020 Software Assurance Marketplace

#
# Set the hostname of the web server in all relevant configuration locations.
#

encountered_error=0
trap 'encountered_error=1; echo "Error (unexpected): In $(basename "$0"): $BASH_COMMAND" 1>&2' ERR
set -o errtrace

function show_usage_and_exit() {
    echo "Usage: $0 --hostname=<new hostname> [options]" 1>&2
    echo "" 1>&2
    echo "Options:" 1>&2
    echo "  --force  Do not configure relative URLs anywhere" 1>&2
    exit 1
}

BINDIR=$(dirname "$0")
config_json="/var/www/html/config/config.json"
dot_env="/var/www/swamp-web-server/.env"
swamp_conf="/opt/swamp/etc/swamp.conf"

############################################################################

new_hostname=""
set_hostname_everywhere=""

for option in "$@" ; do
    case "$option" in
        --force) set_hostname_everywhere="yes" ;;
        --hostname=*) new_hostname=${option#--hostname=} ;;
        --help)
            show_usage_and_exit
            ;;
        *)
            echo "Error: Unrecognized option: $option" 1>&2
            echo "" 1>&2
            show_usage_and_exit
            ;;
    esac
done

if [ -z "$new_hostname" ]; then
    show_usage_and_exit
fi
if ! perl -e 'use Socket; print inet_ntoa(inet_aton($ARGV[0]))' "$new_hostname" 1>/dev/null 2>/dev/null ; then
    echo "Error: Unable to determine an IP address for: $new_hostname" 1>&2
    exit 1
fi
if [ ! -f "$config_json" ]; then
    echo "Error: No such file: $config_json" 1>&2
    exit 1
fi
if [ ! -f "$dot_env" ]; then
    echo "Error: No such file: $dot_env" 1>&2
    exit 1
fi
if [ ! -f "$swamp_conf" ]; then
    echo "Error: No such file: $swamp_conf" 1>&2
    exit 1
fi
if [ "$(whoami)" != "root" ]; then
    echo "Error: This utility must be run as 'root'. Perhaps use 'sudo'." 1>&2
    exit 1
fi

############################################################################

default_web_server=""
laravel_app_url="https://$new_hostname"
swamp_api_web_server="https://localhost"

if [ "$set_hostname_everywhere" = "yes" ]; then
    default_web_server="https://$new_hostname"
    swamp_api_web_server="https://$new_hostname"
fi

function update_config() {
    key="$1"
    val="$2"
    target="$3"
    nospace="$4"

    # Escape special characters for sed's 's//'
    val=${val//\\/\\\\}  # escape back slash
    val=${val//\//\\\/}  # escape forward slash
    val=${val//&/\\&}    # escape ampersands

    if [ -f "$target" ]; then
        if [ "$nospace" = "-nospace" ]; then
            sed -i "s/^\s*$key\s*=.*$/$key=$val/" "$target"
        else
            sed -i "s/^\s*$key\s*=.*$/$key = $val/" "$target"
        fi
    fi
}

#
# SWAMP API web server (i.e., the backend web server).
#
"$BINDIR/../sbin/swamp_set_config_json_host" "$default_web_server"

echo "Setting SWAMP API web server in $(basename "$swamp_conf") to $swamp_api_web_server"
update_config "swamp_api_web_server" "$swamp_api_web_server/swamp-web-server/public" "$swamp_conf"

#
# Laravel APP URLs.
#
echo "Setting Laravel APP URLs to $laravel_app_url"
update_config "APP_URL"      "$laravel_app_url" "$dot_env" -nospace
update_config "APP_CORS_URL" "$laravel_app_url" "$dot_env" -nospace

#
# Other places that affect how URLs are constructed for the web application.
#
if [ -z "$default_web_server" ]; then
    echo "Setting web server in other URLs"
else
    echo "Setting web server in other URLs to $default_web_server"
fi
update_config "reporturl" "$default_web_server/results" "$swamp_conf"

#
# Updating the database entries requires a one-off script.
#
TMP_FILE=$(mktemp /tmp/swamp_set_web_host.XXXXXX.sql)

source "$BINDIR/../sbin/db_support.functions"
trap 'rm -f "$TMP_FILE" ; reset_db_support' EXIT
trap 'rm -f "$TMP_FILE" ; reset_db_support ; exit 1' INT TERM

setup_db_support

cat >"$TMP_FILE" <<END_DB_SCRIPT
    DELETE FROM assessment.system_setting WHERE system_setting_code='OUTGOING_BASE_URL';
    DELETE FROM assessment.system_setting WHERE system_setting_code='CODEDX_BASE_URL';
    INSERT INTO assessment.system_setting (system_setting_code, system_setting_value) VALUES ('OUTGOING_BASE_URL', '$default_web_server/results/');
    INSERT INTO assessment.system_setting (system_setting_code, system_setting_value) VALUES ('CODEDX_BASE_URL', '$default_web_server/');
END_DB_SCRIPT

do_mysql_command "$TMP_FILE"
reset_db_support
rm -f "$TMP_FILE"

exit $encountered_error
